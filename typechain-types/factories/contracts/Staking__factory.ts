/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Staking, StakingInterface } from "../../contracts/Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenPair_",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "rewardToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "votingAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ActiveVotingExists",
    type: "error",
  },
  {
    inputs: [],
    name: "TokensFreezed",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroRewards",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unstaked",
    type: "event",
  },
  {
    inputs: [],
    name: "DAO_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "freezePeriod",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "getStakeData",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "lpAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rewardAmount",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "startTime",
            type: "uint32",
          },
        ],
        internalType: "struct Staking.Stake",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPercent",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPeriod",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "freezePeriod_",
        type: "uint32",
      },
    ],
    name: "setFreezePeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "rewardPercent_",
        type: "uint32",
      },
    ],
    name: "setRewardPercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "rewardPeriod_",
        type: "uint32",
      },
    ],
    name: "setRewardPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405262093a80600560046101000a81548163ffffffff021916908363ffffffff1602179055506003600560086101000a81548163ffffffff021916908363ffffffff1602179055503480156200005757600080fd5b50604051620032db380380620032db83398181016040528101906200007d919062000700565b620000b17ffb456507cc2c1cf9549a032a0d290b17c7e47c442cb6618b735dfb88303a513460001b6200046960201b60201c565b620000e57fa8f47521099cf740966c5d59506f056541d352a30fb64a2d919c6c741702752b60001b6200046960201b60201c565b620001197f1f1a15b76f4f5a97434fd666b6b8f0cf93f1ba2cd946d421e40899ac7440f4dc60001b6200046960201b60201c565b6200012e6000801b336200046c60201b60201c565b620001627fdd734f4b9d8505b567de67be4e5d631f93a44e9995a140d31d6dd9ac60f2922a60001b6200046960201b60201c565b620001967f286a36f8f1d0968e14a802a6da96ae4ce1dc37373f323fb3927962f5bf11eaec60001b6200046960201b60201c565b620001c87f3b5d4cc60d3ec3516ee8ae083bd60934f6eb2a6c54b1229985c41bfb092b2603826200046c60201b60201c565b620001fc7f3ab600c52aedd6ef8f607ce39dbae872e072f5a9b440baeb3cbf488e9506eb6360001b6200046960201b60201c565b620002307f5bddad4227f792b5b565ce05594d3bf8d6a7f79642ded3a406699427feffec1360001b6200046960201b60201c565b620002657f3b5d4cc60d3ec3516ee8ae083bd60934f6eb2a6c54b1229985c41bfb092b26036000801b6200055d60201b60201c565b620002997fe1b93588a9d221ce81d03d35ea374de07883709b2200758a05cd571f24639e2f60001b6200046960201b60201c565b620002cd7f32ff281ec37b13d213a300f520558a29cf3999d33a5eac58e1dd3b6c6af184ab60001b6200046960201b60201c565b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620003427f5234c495b10facbb718a8d147744f7e56cfc98d605d52652c8f42439f3bf4b4060001b6200046960201b60201c565b620003767f9397cbd336caeae5efc0b70bc5c5a222a2b41a0e4627ad42171ca2688ab89fd860001b6200046960201b60201c565b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620003eb7f84a6d3366bfd5dfaea6b80bf30738fe14eca1cfeb6e6c7f9194aac01a756117d60001b6200046960201b60201c565b6200041f7f7ce121b71e4b4226e34b8f5a9e29e3ca3340fad197148171427672640b721c9760001b6200046960201b60201c565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506200075c565b50565b6200047e8282620005c060201b60201c565b6200055957600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620004fe6200062a60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600062000570836200063260201b60201c565b905081600080858152602001908152602001600020600101819055508181847fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff60405160405180910390a4505050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b6000806000838152602001908152602001600020600101549050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620006838262000656565b9050919050565b6000620006978262000676565b9050919050565b620006a9816200068a565b8114620006b557600080fd5b50565b600081519050620006c9816200069e565b92915050565b620006da8162000676565b8114620006e657600080fd5b50565b600081519050620006fa81620006cf565b92915050565b6000806000606084860312156200071c576200071b62000651565b5b60006200072c86828701620006b8565b93505060206200073f86828701620006b8565b92505060406200075286828701620006e9565b9150509250925092565b612b6f806200076c6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063845afce9116100a2578063d030205111610071578063d0302051146102a3578063d547741f146102c1578063da66d4dc146102dd578063e88dc5b71461030d578063e9c265181461032b57610116565b8063845afce91461021d57806391d1485414610239578063a217fddf14610269578063a694fc3a1461028757610116565b80632def6620116100e95780632def6620146101b55780632f2ff15d146101bf578063318d802b146101db57806336568abe146101f75780634e71d92d1461021357610116565b806301ffc9a71461011b5780630a3cb6631461014b5780631093aa6c14610169578063248a9ca314610185575b600080fd5b610135600480360381019061013091906121de565b610349565b6040516101429190612226565b60405180910390f35b6101536103c3565b6040516101609190612260565b60405180910390f35b610183600480360381019061017e91906122a7565b610461565b005b61019f600480360381019061019a919061230a565b610534565b6040516101ac9190612346565b60405180910390f35b6101bd610553565b005b6101d960048036038101906101d491906123bf565b610ca4565b005b6101f560048036038101906101f091906122a7565b610cc5565b005b610211600480360381019061020c91906123bf565b610d7b565b005b61021b610dfe565b005b610237600480360381019061023291906122a7565b6112ac565b005b610253600480360381019061024e91906123bf565b611362565b6040516102609190612226565b60405180910390f35b6102716113cc565b60405161027e9190612346565b60405180910390f35b6102a1600480360381019061029c9190612435565b6113d3565b005b6102ab6117b1565b6040516102b89190612260565b60405180910390f35b6102db60048036038101906102d691906123bf565b61184f565b005b6102f760048036038101906102f29190612462565b611870565b60405161030491906124ef565b60405180910390f35b610315611987565b6040516103229190612260565b60405180910390f35b610333611a25565b6040516103409190612346565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103bc57506103bb82611a49565b5b9050919050565b60006103f17f0f031aa280444014e734d4c7e81a3420ff4aa25a777d2d4f0c86d634778c269260001b611ab3565b61041d7fe0580a06414ce2ec7bc0573ef5e50c1a6e420841667d64fd8c3bf20de3f2220360001b611ab3565b6104497f39570da8ddf4c100cfa9bc8199e8031ad0bd155c3e23e78b46c314a8f186345260001b611ab3565b600560009054906101000a900463ffffffff16905090565b7f3b5d4cc60d3ec3516ee8ae083bd60934f6eb2a6c54b1229985c41bfb092b260361048b81611ab6565b6104b77f0a105cad56527b3262ff6fae89e73c35a56a319fd5043e352780cd2b4f1bce5d60001b611ab3565b6104e37f0bd85eee917d8ca60e0253d6c193d9d9262502f3f89ef11d9e9da41b31b46eca60001b611ab3565b61050f7fdafd756f63a08bba5fd4a8a07d1c4f23176edd4bbd8623c2ee2cd3d16f5fab4760001b611ab3565b81600560006101000a81548163ffffffff021916908363ffffffff1602179055505050565b6000806000838152602001908152602001600020600101549050919050565b61057f7f4c4f5f7ecea66961f369a37c72553ef0b6eee0b4a4373312659537c4915bd93560001b611ab3565b6105ab7f01f7992c52f22a699a2e02bcb134ad01d3c010da5a190c22a4341852041a0d3960001b611ab3565b6105d77f32cdbf4489c10ccd7fb1b79f08804f537d4d98fb13aadc1f2f92ac1189b13e1b60001b611ab3565b600560009054906101000a900463ffffffff16600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900463ffffffff166106479190612539565b63ffffffff164210156106de576106807f149c953c0169a1155863f990bb05805eb6ff5fb09e49d0bbff92bd50ada3ab6a60001b611ab3565b6106ac7fd9bca33469f435e0245b9cf37b37015ebb37205a6d0f9ddcf5de863a3700e79460001b611ab3565b6040517f7531ed2d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61070a7f0b3828e28e521490b634a07091d3eaa0ba9db4a29e085e3f5831bf835f01369360001b611ab3565b6107367f933e0449d1b03fccbb79e47e3edb10bb9d88155e18f47776c4ea254949847a0960001b611ab3565b6107627f251cbe696fd6e176ea0e6898b91e3c162a4335d3886f6fc22564bc4e03b53eb960001b611ab3565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bcf489b9336040518263ffffffff1660e01b81526004016107bf9190612582565b602060405180830381865afa1580156107dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080091906125b2565b905061082e7f641ddcd70b5fd46ba0042d33f66c143af0754284de8ee59b4cdaa7a64955707860001b611ab3565b61085a7f5ac9b2e6237ebed9607087f489eb5598055f03b43783bebbb50b3d2a2cbabfc060001b611ab3565b8063ffffffff164210156108f2576108947ffb0109d779ff1c8a4ddb9223e3ea3765f7812c2fdbf93c0ecff318e65a6372b760001b611ab3565b6108c07f0d6f12917c843b725dcc30cf2ef0175155ffc1958c59f15ac88b9d213745804a60001b611ab3565b6040517fac6853da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61091e7f0f389c25b528035d2cb3e8a9fb3e1089734747c3d8075a86225c2d05cc8c0eb760001b611ab3565b61094a7f513db3cc770b03d2d73e423fbe5fc2706cc8ce830714df9968f29873553f3d7b60001b611ab3565b6109767f3554a96d9e4461457e0e5e82aa23c37f6c4b9a0a54d5d3f2b4b5066b1c66f90e60001b611ab3565b61097f33611aca565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546109d091906125df565b92505081905550610a037fdb4965ea1092aab8b71687925fd6ab9c64374c339c0cfb42ea2cf8a490b78be560001b611ab3565b610a2f7f2f07c99c6cd15511867c310ea640001aa3ef21e72b4985bea96d19eb756f918660001b611ab3565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050610aa27f14ed82029b798fb6edc31387c91b5999a48b27111efb474db9d265c3e3bc180460001b611ab3565b610ace7f5344302ef96459fd9b3ec981b7c68a957267ea6d9eb3036698a49403b78f857a60001b611ab3565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550610b427f1314dac8babbcdefbf599647eed6aefbb2be331be11b536eb9adc35db2ec577260001b611ab3565b610b6e7f7bdcdc1838125bfd61a349a88196e281d8b4a5a323c29df3815ec1f73f36b9b460001b611ab3565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610bcb929190612644565b6020604051808303816000875af1158015610bea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0e9190612699565b50610c3b7f46b45efff1bda92d0c4597101137841ceb4e59bf2cb086423bd14a109e748ebe60001b611ab3565b610c677f1c4c8eb934b2f650fc4e1e64042af957374a8b4d3c505432f67adc026816ecaf60001b611ab3565b7f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f753382604051610c98929190612644565b60405180910390a15050565b610cad82610534565b610cb681611ab6565b610cc08383611cb8565b505050565b6000801b610cd281611ab6565b610cfe7f8ad9d098c8f7fc8b876b96f1e4f38797ef637300e8d7d2387d7984f2200fd83c60001b611ab3565b610d2a7f9934d62a1c696a5fa5165daec093e332955d74168cafc2438e5b5a2460a3a28460001b611ab3565b610d567fb768a7c383286cbe5adac03353a5ea08ef1c1ef18b62979cad9b848e79d550af60001b611ab3565b81600560086101000a81548163ffffffff021916908363ffffffff1602179055505050565b610d83611d98565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610df0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de790612749565b60405180910390fd5b610dfa8282611da0565b5050565b610e2a7fa9fe5c684001a4d0f595836c7ef471fc64875b215ac4a0c209dc5b97f7c6e86c60001b611ab3565b610e567fa1d870efa6c439d9d4791be16cd91378f637b88378a00a656c78436564b83f8a60001b611ab3565b610e827fbf7cdea502f979b3a480acf991c7134082c46c26862e33835f8eb545f93fd95660001b611ab3565b6000610e8d33611aca565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154610eda91906125df565b9050610f087fc4926b20b68e5c9efe6227c603fe0012093ff3f1fc981e3a4ace51d00106879e60001b611ab3565b610f347f72e58194eca9a72f815e33c782ea59dfdc4ffc1bcea2db3793f1f5fa06a4069560001b611ab3565b60008103610f9a57610f687ff8d6127634142512dacccbadd742f9900c193d9b0539879811bf78bbb761c1df60001b611ab3565b6040517f899aaa9d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610fc67f158a35a10be4bf0dd4d2d3292a10034a643433305a85bc123ab2dc187b33bf8660001b611ab3565b610ff27f7aeadc85075f2049919bfbc4e7ee663be54b0eaaad06415640523c51d32cb14c60001b611ab3565b61101e7f22199c3921fd250a5e64ba1c6903690f2962997711c62194f27f490422c25ef060001b611ab3565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506110927f2aea95764140454b7c97add466f3e703ae25d94a03e6cd64c4ccbad18579c75f60001b611ab3565b6110be7f31d9dbd363b90a72d614daee4d50fe32dd036f347d38063ed6653ff929f44f5960001b611ab3565b42600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548163ffffffff021916908363ffffffff16021790555061114b7fe04c97f35a32bf43fcf308c9a515dbca983d9eead2a06b6e64047d693fd6650960001b611ab3565b6111777f5be8162f923493c986ee7d3f49148a481f8112eda5833a4c8a0fb10044dcaac760001b611ab3565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016111d4929190612644565b6020604051808303816000875af11580156111f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112179190612699565b506112447fae5050a4e92b2022c6adff5b2e0c1c66f45bd394af0d5829da9c8e2e43207ee860001b611ab3565b6112707f856c489acb6e46d90db89731af943285ff9618df871635b0d80cc06a0dfbeb7960001b611ab3565b7fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a33826040516112a1929190612644565b60405180910390a150565b6000801b6112b981611ab6565b6112e57f4420b3c78f28500655c5e71b41845fb5cd0c8297cda8e3affad76dd17e1047c360001b611ab3565b6113117fa0b0f1c73d4eabaca29241c5ea75ad13102ad01ca39eed3a9aa0f51d170c07d160001b611ab3565b61133d7fa1d113a28c70030d0039e77610314a2256a08af922a9f0a7be4ea7a9da92d36960001b611ab3565b81600560046101000a81548163ffffffff021916908363ffffffff1602179055505050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b6113ff7f3e92f1ab067e62888f7d2d79f28dbd1856c6c42c6533adff35408d50f21355c160001b611ab3565b61142b7fff1577e403dbd422d558dc6e4da90136a68bcb294f31d15a436dbeab2716243660001b611ab3565b6114577fb1380f232682ca3e82982665774f073c2c82a3a976d4a08ba5ac92658bb6c90060001b611ab3565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016114b693929190612769565b6020604051808303816000875af11580156114d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f99190612699565b506115267fc6ebb69b54b6a14f158cd9ea4161e7ec70597a46a519c6815361a86a72192c1860001b611ab3565b6115527fe67e7d0bd90d431106dfc7cad7f933ce4441d6fade928e2a39297c954a2356cd60001b611ab3565b61155b33611aca565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546115ac91906125df565b925050819055506115df7f7d8e11d766b933b18ca9d485c4e0dedf8041f6f44e520d8f8f669eadd5da186b60001b611ab3565b61160b7ffcc6bd9a52372af6538cf28802d1bcb9156b35feb6a5c2a13133dbfe75c945b760001b611ab3565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461165d91906125df565b925050819055506116907f7cf233da9ad9616262e4fbf5ead3c74ab5e616e643a6e96204d2f4ae895ef7fd60001b611ab3565b6116bc7fc2a1492ca69178713cf3be4d823380e5dfe7d1c1c10e04d128cc48c7d0f8725d60001b611ab3565b42600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548163ffffffff021916908363ffffffff1602179055506117497f313f5ed2f4bf7a65df5291f7bc852db2734b21e93cc71007c5e28a679b8ab4a560001b611ab3565b6117757fa8b241296dd8d3d1e9f64ec7456b9df983dfe303fb4b16f2346bbc60f3f932da60001b611ab3565b7f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d33826040516117a6929190612644565b60405180910390a150565b60006117df7fef80be7aee356921dd24f9a9a2522ea68e0147de3a31855011f700e581b8993e60001b611ab3565b61180b7f1586483d8fb3ba1912ecc37b6178554f2dffec2c4b638421dbdcd883277628c960001b611ab3565b6118377f887399d730c30d648557dab550bffd8e539b3bea65e9f1bb2a3cb1a6a10a80d560001b611ab3565b600560089054906101000a900463ffffffff16905090565b61185882610534565b61186181611ab6565b61186b8383611da0565b505050565b61187861215a565b6118a47fb123c9eadcee7be4628859579f44812b23bc8919c942b71e4ab3f6886190c2f660001b611ab3565b6118d07fe45110462b8b77d6ff09b6e0a4c6860c1748a556ca527fe2dd05c9dc18b50eea60001b611ab3565b6118fc7ff6115dd43de815d0eb18406d4256b03fc41558a1604a4f4bcff3d3a2cd956a5d60001b611ab3565b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900463ffffffff1663ffffffff1663ffffffff16815250509050919050565b60006119b57f0dc9af27d98a5e98f1b6fc33f92763063b4cfc4235493c318736970f29ec574260001b611ab3565b6119e17f80fa30f7ad2a46281aa26f28b37ad02f43e5673f0cac82ad84716137bfb8303960001b611ab3565b611a0d7ffbc6f4717dca054527e09b272801c001887e739c47b9e3eea390450d777f031e60001b611ab3565b600560049054906101000a900463ffffffff16905090565b7f3b5d4cc60d3ec3516ee8ae083bd60934f6eb2a6c54b1229985c41bfb092b260381565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b50565b611ac781611ac2611d98565b611e81565b50565b6000611af87f985c6e899d99ca10f58eda6a6321012a3e5f24e87ef864b8527acc5ce16d0e7660001b611ab3565b611b247f3af799a26dad505a7cf93ff0940d7ae7141945262745619bd954534c0849e2de60001b611ab3565b611b507f84b4cea2b45fb8c02a282a789e54a216a77ba922bb34c8ff7687b9b5dc7e6fda60001b611ab3565b6000600560049054906101000a900463ffffffff1663ffffffff16600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900463ffffffff1663ffffffff1642611bcf91906127a0565b611bd99190612803565b9050611c077fa5b6739e5d02c946ca8f9b1d30f18e6d8afab946972d451d16c289ebf1bb907260001b611ab3565b611c337f3c3e3a9cacf7e3e3fb0b67d85910332755562f7a7c59ee5e154c1d314e5f3f2360001b611ab3565b6064600560089054906101000a900463ffffffff1663ffffffff16600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015483611c9c9190612834565b611ca69190612834565b611cb09190612803565b915050919050565b611cc28282611362565b611d9457600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611d39611d98565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b611daa8282611362565b15611e7d57600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611e22611d98565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b611e8b8282611362565b611f1a57611eb08173ffffffffffffffffffffffffffffffffffffffff166014611f1e565b611ebe8360001c6020611f1e565b604051602001611ecf9291906129a0565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f119190612a24565b60405180910390fd5b5050565b606060006002836002611f319190612834565b611f3b91906125df565b67ffffffffffffffff811115611f5457611f53612a46565b5b6040519080825280601f01601f191660200182016040528015611f865781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110611fbe57611fbd612a75565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061202257612021612a75565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600060018460026120629190612834565b61206c91906125df565b90505b600181111561210c577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106120ae576120ad612a75565b5b1a60f81b8282815181106120c5576120c4612a75565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c94508061210590612aa4565b905061206f565b5060008414612150576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161214790612b19565b60405180910390fd5b8091505092915050565b60405180606001604052806000815260200160008152602001600063ffffffff1681525090565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6121bb81612186565b81146121c657600080fd5b50565b6000813590506121d8816121b2565b92915050565b6000602082840312156121f4576121f3612181565b5b6000612202848285016121c9565b91505092915050565b60008115159050919050565b6122208161220b565b82525050565b600060208201905061223b6000830184612217565b92915050565b600063ffffffff82169050919050565b61225a81612241565b82525050565b60006020820190506122756000830184612251565b92915050565b61228481612241565b811461228f57600080fd5b50565b6000813590506122a18161227b565b92915050565b6000602082840312156122bd576122bc612181565b5b60006122cb84828501612292565b91505092915050565b6000819050919050565b6122e7816122d4565b81146122f257600080fd5b50565b600081359050612304816122de565b92915050565b6000602082840312156123205761231f612181565b5b600061232e848285016122f5565b91505092915050565b612340816122d4565b82525050565b600060208201905061235b6000830184612337565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061238c82612361565b9050919050565b61239c81612381565b81146123a757600080fd5b50565b6000813590506123b981612393565b92915050565b600080604083850312156123d6576123d5612181565b5b60006123e4858286016122f5565b92505060206123f5858286016123aa565b9150509250929050565b6000819050919050565b612412816123ff565b811461241d57600080fd5b50565b60008135905061242f81612409565b92915050565b60006020828403121561244b5761244a612181565b5b600061245984828501612420565b91505092915050565b60006020828403121561247857612477612181565b5b6000612486848285016123aa565b91505092915050565b612498816123ff565b82525050565b6124a781612241565b82525050565b6060820160008201516124c3600085018261248f565b5060208201516124d6602085018261248f565b5060408201516124e9604085018261249e565b50505050565b600060608201905061250460008301846124ad565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061254482612241565b915061254f83612241565b92508263ffffffff038211156125685761256761250a565b5b828201905092915050565b61257c81612381565b82525050565b60006020820190506125976000830184612573565b92915050565b6000815190506125ac8161227b565b92915050565b6000602082840312156125c8576125c7612181565b5b60006125d68482850161259d565b91505092915050565b60006125ea826123ff565b91506125f5836123ff565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561262a5761262961250a565b5b828201905092915050565b61263e816123ff565b82525050565b60006040820190506126596000830185612573565b6126666020830184612635565b9392505050565b6126768161220b565b811461268157600080fd5b50565b6000815190506126938161266d565b92915050565b6000602082840312156126af576126ae612181565b5b60006126bd84828501612684565b91505092915050565b600082825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6000612733602f836126c6565b915061273e826126d7565b604082019050919050565b6000602082019050818103600083015261276281612726565b9050919050565b600060608201905061277e6000830186612573565b61278b6020830185612573565b6127986040830184612635565b949350505050565b60006127ab826123ff565b91506127b6836123ff565b9250828210156127c9576127c861250a565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061280e826123ff565b9150612819836123ff565b925082612829576128286127d4565b5b828204905092915050565b600061283f826123ff565b915061284a836123ff565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156128835761288261250a565b5b828202905092915050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b60006128cf60178361288e565b91506128da82612899565b601782019050919050565b600081519050919050565b60005b8381101561290e5780820151818401526020810190506128f3565b8381111561291d576000848401525b50505050565b600061292e826128e5565b612938818561288e565b93506129488185602086016128f0565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b600061298a60118361288e565b915061299582612954565b601182019050919050565b60006129ab826128c2565b91506129b78285612923565b91506129c28261297d565b91506129ce8284612923565b91508190509392505050565b6000601f19601f8301169050919050565b60006129f6826128e5565b612a0081856126c6565b9350612a108185602086016128f0565b612a19816129da565b840191505092915050565b60006020820190508181036000830152612a3e81846129eb565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000612aaf826123ff565b915060008203612ac257612ac161250a565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000612b036020836126c6565b9150612b0e82612acd565b602082019050919050565b60006020820190508181036000830152612b3281612af6565b905091905056fea26469706673582212208eb2d8f240f80c75a1130f14448cbfc4f648e896a39d21a38050ee7397220b8664736f6c634300080d0033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    tokenPair_: PromiseOrValue<string>,
    rewardToken_: PromiseOrValue<string>,
    votingAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Staking> {
    return super.deploy(
      tokenPair_,
      rewardToken_,
      votingAddress,
      overrides || {}
    ) as Promise<Staking>;
  }
  override getDeployTransaction(
    tokenPair_: PromiseOrValue<string>,
    rewardToken_: PromiseOrValue<string>,
    votingAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      tokenPair_,
      rewardToken_,
      votingAddress,
      overrides || {}
    );
  }
  override attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  override connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
